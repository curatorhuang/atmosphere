import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.text.SimpleDateFormat;

import static java.awt.BorderLayout.*;
import javax.swing.Timer;
import java.util.*;
import javax.swing.*;

public class Screen {
	// 画布设置
	JFrame f = new JFrame("南京大学大气能见度与湍流强度测试仪——采集处理与显示系统");
	MyCanvas_1 Canvas_1 = new MyCanvas_1();
	MyCanvas_2 Canvas_2 = new MyCanvas_2();
	MyCanvas_3 Canvas_3 = new MyCanvas_3();
	JPanel jp_1 = new JPanel();
	JPanel jp_2 = new JPanel();
	JPanel jp_3 = new JPanel();

	// 菜单栏
	JMenuBar mb = new JMenuBar();
	private JMenu file = new JMenu("文件");
	private JMenu setting = new JMenu("设置");
	private JMenuItem openitem = new JMenuItem("打开");
	private JMenuItem saveitem = new JMenuItem("保存");

	// 内部窗口
	private JDesktopPane jdp = new JDesktopPane();
	private JInternalFrame jf = new JInternalFrame("原始信号", true, false, true, true);
	private JInternalFrame jf2 = new JInternalFrame("大气能见度与湍流强度", true, false, true, true);
	private JInternalFrame jf3 = new JInternalFrame("初步处理信号", true, false, true, true);

	JPanel jpl = new JPanel();
	JButton button1 = new JButton("按钮");
	JTextField text_1 = new JTextField(2);
	JTextField text_2 = new JTextField(2);
	JTextField text_3 = new JTextField(2);

	JPanel jp2 = new JPanel();
	JButton button2 = new JButton("按钮");
	JTextField text1 = new JTextField(2);
	JTextField text2 = new JTextField(2);
	JTextField text3 = new JTextField(2);

	JPanel jp3 = new JPanel();
	JButton button3 = new JButton("按钮");
	JTextField text4 = new JTextField(2);
	JTextField text5 = new JTextField(2);
	JTextField text6 = new JTextField(2);

	// 获取屏幕尺寸
	Dimension screensize = Toolkit.getDefaultToolkit().getScreenSize();
	int temWidth = (int) screensize.getWidth();
	int temHeight = (int) screensize.getHeight();
	int width = temWidth * 8 / 10;
	int height = temHeight * 8 / 10;

	GridBagLayout gbl = new GridBagLayout();
	GridBagConstraints gbc = new GridBagConstraints();

	// 将时间当成图片
	BufferedImage image = new BufferedImage(100, 50, BufferedImage.TYPE_INT_RGB);
	Graphics g = image.getGraphics();

	Timer timer;

	String[] timing = new String[15];
	SimpleDateFormat nowtime = new SimpleDateFormat("HH:mm:ss");

	static boolean choose = true;
	static int imp;
	static int s = 0;

	public void init() throws IOException {

		// 添加画布
		jf.add(Canvas_1);
		// jf.setSize(width/10*4,height/2);
		Canvas_1.setPreferredSize(new Dimension(width / 10 * 4, height / 2 - height / 3 / 10));
		jf2.add(Canvas_2);

		Canvas_2.setPreferredSize(new Dimension(width * 6 / 10, height - height / 2 / 18));
		jf3.add(Canvas_3);

		Canvas_3.setPreferredSize(new Dimension(width / 10 * 4, height / 2 - height / 3 / 10));

		button1.setPreferredSize(new Dimension(width / 10 * 4 / 10, height / 2 / 18));
		button2.setPreferredSize(new Dimension(width / 10 * 4 / 10, height / 2 / 18));
		button3.setPreferredSize(new Dimension(width / 10 * 4 / 10, height / 2 / 18));

		// 设置窗口位置
		jf.setLocation(0, 0);
		jf3.setLocation(0, height / 2 + 35);
		jf2.setLocation(width / 10 * 4, 0);
		jdp.add(jf);
		jdp.add(jf2);
		jdp.add(jf3);
		f.add(jdp);

		// 添加历史输入框和按钮
		jpl.add(text_1);
		jpl.add(text_2);
		jpl.add(text_3);
		jpl.add(button1);
		jf.add(jpl, SOUTH);

		jp2.add(text1);
		jp2.add(text2);
		jp2.add(text3);
		jp2.add(button2);
		jf2.add(jp2, SOUTH);
 
		jp3.add(text4);
		jp3.add(text5);
		jp3.add(text6);
		jp3.add(button3);
		jf3.add(jp3, SOUTH);

		// 添加菜单栏
		file.add(openitem);
		file.add(saveitem);
		mb.add(file);
		mb.add(setting);
		f.setJMenuBar(mb);

		// 1秒刷新一次图像
		timer = new Timer(1000, new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Canvas_1.repaint();
				Canvas_2.repaint();
				Canvas_3.repaint();
				s = s + 1;
			}
		});
		timer.start();
		// 设置一号窗口按钮的事件响应
		button1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				timer.stop();
				choose = false;
				imp = Integer.parseInt(text_2.getText()) * 60 + Integer.parseInt(text_3.getText());
				Canvas_1.repaint();

			}
		});

		// 三块内部屏的显示
		jf.setVisible(true);
		jf.pack();
		jf2.setVisible(true);
		jf2.pack();
		jf3.setVisible(true);
		jf3.pack();

		f.setSize(width, height + height / 6);
		f.setLocationRelativeTo(null);// 将窗口置于屏幕的中央
		f.setVisible(true);
	}

	public static void main(String[] args) throws IOException {

		new Screen().init();

	}

	/*
	 * class RotatePanel extends JPanel { protected void paintComponent(Graphics
	 * g) { super.paintComponent(g); Graphics2D g2d = (Graphics2D) g;
	 * timing[0]=nowtime.format(new Date()); g2d.translate(10, 10);
	 * g2d.rotate(0.5 * Math.PI);//旋转
	 * 
	 * g2d.drawString(timing[0], 0, 0); } }
	 */

}
